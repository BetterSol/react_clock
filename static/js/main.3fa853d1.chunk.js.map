{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","nameTimerId","timeTimerId","state","clockName","clockTime","Date","toUTCString","slice","hasClock","isClockVisible","getRandomName","value","now","toString","hideClock","event","preventDefault","setState","stopTimeTimer","showClock","startTimeTimer","this","startNameTimer","document","addEventListener","stopNameTimer","removeEventListener","window","setInterval","oldName","console","debug","info","clearInterval","className","React","Component","ReactDOM","render","getElementById"],"mappings":"sNAGaA,EAAb,4MAMEC,YAAc,EANhB,EAQEC,YAAc,EARhB,EAUEC,MAAQ,CACNC,UAAW,UACXC,WAAW,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAChDC,UAAU,EACVC,gBAAgB,GAdpB,EA+BEC,cAAgB,WACd,IAAMC,EAAQN,KAAKO,MAAMC,WAAWN,OAAO,GAE3C,MAAM,SAAN,OAAgBI,IAlCpB,EAqCEG,UAAY,SAACC,GACP,EAAKb,MAAMO,iBACbM,EAAMC,iBACN,EAAKC,SAAS,CAAER,gBAAgB,IAChC,EAAKS,kBAzCX,EA6CEC,UAAY,WACL,EAAKjB,MAAMO,iBACd,EAAKQ,SAAS,CACZR,gBAAgB,EAChBL,WAAW,IAAIC,MAAOC,cAAcC,OAAO,IAAK,KAElD,EAAKa,mBAnDX,uDAiBE,WACEC,KAAKC,iBACLD,KAAKD,iBACLG,SAASC,iBAAiB,cAAeH,KAAKP,WAC9CS,SAASC,iBAAiB,QAASH,KAAKF,aArB5C,kCAwBE,WACEE,KAAKI,gBACLJ,KAAKH,gBACLK,SAASG,oBAAoB,cAAeL,KAAKP,WACjDS,SAASG,oBAAoB,QAASL,KAAKF,aA5B/C,4BAwDE,WAAwB,IAAD,OACrBE,KAAKrB,YAAc2B,OAAOC,aAAY,WACpC,IAAMzB,EAAY,EAAKO,gBACjBmB,EAAU,EAAK3B,MAAMC,UAE3B,EAAKc,SAAS,CAAEd,cAEZ,EAAKD,MAAMO,gBAEbqB,QAAQC,MAAR,uBAA8BF,EAA9B,eAA4C1B,MAE7C,QAnEP,4BAsEE,WAAwB,IAAD,OACrBkB,KAAKpB,YAAc0B,OAAOC,aAAY,WAChC,EAAK1B,MAAMO,iBACb,EAAKQ,SAAS,CAAEb,WAAW,IAAIC,MAAOC,cAAcC,OAAO,IAAK,KAEhEuB,QAAQE,KAAR,UAAgB,EAAK9B,MAAME,eAE5B,OA7EP,2BAiFE,WACE6B,cAAcZ,KAAKrB,eAlFvB,2BAqFE,WACEiC,cAAcZ,KAAKpB,eAtFvB,oBAyFE,WACE,OACE,sBAAKiC,UAAU,MAAf,UACE,6CAECb,KAAKnB,MAAMM,UAAYa,KAAKnB,MAAMO,gBACjC,sBAAKyB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKnB,MAAMC,YAGb,YAED,sBAAM+B,UAAU,cAAhB,UACG,IAAI7B,MAAOC,cAAcC,OAAO,IAAK,eAvGpD,GAAyB4B,IAAMC,WCA/BC,IAASC,OACP,cAAC,EAAD,IACAf,SAASgB,eAAe,W","file":"static/js/main.3fa853d1.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nexport class App extends React.Component<{}, {\n  clockName: string,\n  clockTime: string,\n  hasClock: boolean,\n  isClockVisible: boolean,\n}> {\n  nameTimerId = 0;\n\n  timeTimerId = 0;\n\n  state = {\n    clockName: 'Clock-0',\n    clockTime: new Date().toUTCString().slice(-12, -4),\n    hasClock: true,\n    isClockVisible: true,\n  };\n\n  componentDidMount(): void {\n    this.startNameTimer();\n    this.startTimeTimer();\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n  }\n\n  componentWillUnmount(): void {\n    this.stopNameTimer();\n    this.stopTimeTimer();\n    document.removeEventListener('contextmenu', this.hideClock);\n    document.removeEventListener('click', this.showClock);\n  }\n\n  getRandomName = (): string => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  hideClock = (event: MouseEvent): void => {\n    if (this.state.isClockVisible) {\n      event.preventDefault();\n      this.setState({ isClockVisible: false });\n      this.stopTimeTimer();\n    }\n  };\n\n  showClock = (): void => {\n    if (!this.state.isClockVisible) {\n      this.setState({\n        isClockVisible: true,\n        clockTime: new Date().toUTCString().slice(-12, -4),\n      });\n      this.startTimeTimer();\n    }\n  };\n\n  // This code starts a timer\n  startNameTimer(): void {\n    this.nameTimerId = window.setInterval(() => {\n      const clockName = this.getRandomName();\n      const oldName = this.state.clockName;\n\n      this.setState({ clockName });\n\n      if (this.state.isClockVisible) {\n        // eslint-disable-next-line no-console\n        console.debug(`Renamed from ${oldName} to ${clockName}`);\n      }\n    }, 3300);\n  }\n\n  startTimeTimer(): void {\n    this.timeTimerId = window.setInterval(() => {\n      if (this.state.isClockVisible) {\n        this.setState({ clockTime: new Date().toUTCString().slice(-12, -4) });\n        // eslint-disable-next-line no-console\n        console.info(`${this.state.clockTime}`);\n      }\n    }, 1000);\n  }\n\n  // this code stops the timer\n  stopNameTimer(): void {\n    clearInterval(this.nameTimerId);\n  }\n\n  stopTimeTimer(): void {\n    clearInterval(this.timeTimerId);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && this.state.isClockVisible && (\n          <div className=\"Clock\">\n            <strong className=\"Clock__name\">\n              {this.state.clockName}\n            </strong>\n\n            {' time is '}\n\n            <span className=\"Clock__time\">\n              {new Date().toUTCString().slice(-12, -4)}\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}